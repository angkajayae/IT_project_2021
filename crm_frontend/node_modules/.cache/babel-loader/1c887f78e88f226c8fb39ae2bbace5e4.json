{"ast":null,"code":"// get are using Axios to communicate with the Server API for authentication only\n// for other purposes, this app using Fetch API -- you should switch others to Axios\n// if you want to try as an exercise\nimport axios from 'axios';\nconst BASE_URL = \"http://localhost:3000\"; // Axios interceptors are functions that Axios calls for every request\n// We are simply adding out token to every request that we send to the\n// Personal CRM Server (REST API)\n\naxios.interceptors.request.use(config => {\n  const {\n    origin\n  } = new URL(config.url);\n  const allowedOrigins = [BASE_URL];\n  const token = localStorage.getItem('token'); // get the token\n\n  if (allowedOrigins.includes(origin)) {\n    config.headers.authorization = `Bearer ${token}`; // we put our token in the header\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // component for handling user login\n\nexport async function loginUser(user) {\n  // unpack user details, email and password\n  const {\n    email,\n    password\n  } = user; // if the user did not enter an email or password\n\n  if (!email || !password) {\n    alert(\"must provide an email and a password\");\n    return;\n  } // define the route which the Personal CRM API is handling \n  // login/authentication\n\n\n  const endpoint = BASE_URL + `/login`; // POST the email and password to Personal CRM API to \n  // authenticate user and receive the token explicitly\n  // i.e. data = token\n\n  let data = await axios({\n    url: endpoint,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: JSON.stringify({\n      email: email,\n      password: password\n    }, {\n      withCredentials: true\n    } // IMPORTANT\n    )\n  }).then(res => res.data); // put token ourselves in the local storage, we will\n  // send the token in the request header to the API server \n\n  localStorage.setItem('token', data); // redirect to homepage -- another way to redirect\n\n  window.location.href = \"/\";\n}","map":{"version":3,"sources":["C:/Users/Erdinan/Desktop/IT_project_2021/crm_frontend/src/api.js"],"names":["axios","BASE_URL","interceptors","request","use","config","origin","URL","url","allowedOrigins","token","localStorage","getItem","includes","headers","authorization","error","Promise","reject","loginUser","user","email","password","alert","endpoint","data","method","JSON","stringify","withCredentials","then","res","setItem","window","location","href"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAG,uBAAjB,C,CAEA;AACA;AACA;;AACAD,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACEC,MAAM,IAAI;AACR,QAAM;AAAEC,IAAAA;AAAF,MAAa,IAAIC,GAAJ,CAAQF,MAAM,CAACG,GAAf,CAAnB;AACA,QAAMC,cAAc,GAAG,CAACR,QAAD,CAAvB;AACA,QAAMS,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAHQ,CAGqC;;AAC7C,MAAIH,cAAc,CAACI,QAAf,CAAwBP,MAAxB,CAAJ,EAAqC;AACnCD,IAAAA,MAAM,CAACS,OAAP,CAAeC,aAAf,GAAgC,UAASL,KAAM,EAA/C,CADmC,CACe;AACnD;;AACD,SAAOL,MAAP;AACD,CATH,EAUEW,KAAK,IAAI;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAZH,E,CAeA;;AACA,OAAO,eAAeG,SAAf,CAAyBC,IAAzB,EAA+B;AAEpC;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBF,IAA5B,CAHoC,CAKpC;;AACA,MAAI,CAACC,KAAD,IAAU,CAACC,QAAf,EAAyB;AACvBC,IAAAA,KAAK,CAAC,sCAAD,CAAL;AACA;AACD,GATmC,CAWpC;AACA;;;AACA,QAAMC,QAAQ,GAAGvB,QAAQ,GAAI,QAA7B,CAboC,CAepC;AACA;AACA;;AACA,MAAIwB,IAAI,GAAG,MAAMzB,KAAK,CAAC;AACrBQ,IAAAA,GAAG,EAACgB,QADiB;AAErBE,IAAAA,MAAM,EAAE,MAFa;AAGrBZ,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHY;AAMrBW,IAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,KAAK,EAAEA,KADY;AAEnBC,MAAAA,QAAQ,EAAEA;AAFS,KAAf,EAIN;AAACO,MAAAA,eAAe,EAAE;AAAlB,KAJM,CAIkB;AAJlB;AANe,GAAD,CAAL,CAadC,IAbc,CAaTC,GAAG,IAAIA,GAAG,CAACN,IAbF,CAAjB,CAlBoC,CAiCpC;AACA;;AACAd,EAAAA,YAAY,CAACqB,OAAb,CAAqB,OAArB,EAA6BP,IAA7B,EAnCoC,CAqCpC;;AACAQ,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD","sourcesContent":["// get are using Axios to communicate with the Server API for authentication only\r\n// for other purposes, this app using Fetch API -- you should switch others to Axios\r\n// if you want to try as an exercise\r\nimport axios from 'axios';\r\nconst BASE_URL = \"http://localhost:3000\";\r\n\r\n// Axios interceptors are functions that Axios calls for every request\r\n// We are simply adding out token to every request that we send to the\r\n// Personal CRM Server (REST API)\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const { origin } = new URL(config.url);\r\n    const allowedOrigins = [BASE_URL];\r\n    const token = localStorage.getItem('token'); // get the token\r\n    if (allowedOrigins.includes(origin)) {\r\n      config.headers.authorization = `Bearer ${token}`; // we put our token in the header\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// component for handling user login\r\nexport async function loginUser(user) {\r\n\r\n  // unpack user details, email and password\r\n  const { email, password } = user;\r\n    \r\n  // if the user did not enter an email or password\r\n  if (!email || !password) {\r\n    alert(\"must provide an email and a password\");\r\n    return;\r\n  }\r\n  \r\n  // define the route which the Personal CRM API is handling \r\n  // login/authentication\r\n  const endpoint = BASE_URL + `/login`;\r\n    \r\n  // POST the email and password to Personal CRM API to \r\n  // authenticate user and receive the token explicitly\r\n  // i.e. data = token\r\n  let data = await axios({\r\n    url:endpoint,\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    data: JSON.stringify({\r\n      email: email,\r\n      password: password\r\n    },\r\n    {withCredentials: true} // IMPORTANT\r\n    )    \r\n  })\r\n    .then(res => res.data);\r\n\r\n  // put token ourselves in the local storage, we will\r\n  // send the token in the request header to the API server \r\n  localStorage.setItem('token',data);\r\n\r\n  // redirect to homepage -- another way to redirect\r\n  window.location.href = \"/\";\r\n}"]},"metadata":{},"sourceType":"module"}